stages:
  - build
  - deploy

build:
  except:
    variables:
      - $TYPE == "postgrestest"
  image: maven:3.6.0-jdk-11
  stage: build
  script:
    - echo "@skills:registry=http://$NEXUS_SERVER/repository/skills-registry/" > ~/.npmrc
    - cat ~/.npmrc
    - echo "<settings><mirrors><mirror><id>central</id><name>central</name><url>http://$NEXUS_SERVER/repository/maven-public/</url><mirrorOf>*</mirrorOf></mirror></mirrors></settings>" > ~/.m2/settings.xml
    - cat ~/.m2/settings.xml
    - mvn install
  artifacts:
    paths:
      - backend/target/backend-*.jar

postgres-test:on-schedule:
  only:
    variables:
      - $TYPE == "postgrestest"
  image: maven:3.6.0-jdk-11
  stage: build
  services:
    - postgres:latest
  variables:
    POSTGRES_PASSWORD: skillsPassword
    POSTGRES_DB: skills
  script:
    - echo "@skills:registry=http://$NEXUS_SERVER/repository/skills-registry/" > ~/.npmrc
    - cat ~/.npmrc
    - echo "<settings><mirrors><mirror><id>central</id><name>central</name><url>http://$NEXUS_SERVER/repository/maven-public/</url><mirrorOf>*</mirrorOf></mirror></mirrors></settings>" > ~/.m2/settings.xml
    - cat ~/.m2/settings.xml
    - mvn test -Dspring.datasource.url=jdbc:postgresql://postgres:5432/skills -Dspring.datasource.username=postgres -Dspring.datasource.password=skillsPassword

deploy:
  except:
    variables:
      - $TYPE == "postgrestest"
  image: alpine:latest
  stage: deploy
  before_script:
    - apk --update --no-cache add sshpass openssh git
  script:
    - git clone https://${GITLAB_DEPLOY_USERNAME}:${GITLAB_DEPLOY_PASSWORD}@gitlab.evoforge.org/skills/skills-deploy.git
    - git clone https://${GITLAB_USER_SVC_USERNAME}:${GITLAB_USER_SVC_PASSWORD}@gitlab.evoforge.org/skills/user-info-service.git
    - TIMESTAMP=`date +%s`
    - TMP_DIR="deploy_${TIMESTAMP}"
    - DEST_PATH="/home/${CI_USERNAME}/$TMP_DIR"
    - sshpass -p $CI_PASSWORD ssh -o StrictHostKeyChecking=no -o PreferredAuthentications=password -o PubkeyAuthentication=no $CI_USERNAME@$CI_IP "rm -rf /home/${CI_USERNAME}/deploy_* && mkdir -p ${DEST_PATH}"
    - cp backend/target/backend-*.jar backend.jar
    - sshpass -p $CI_PASSWORD scp -r skills-deploy ${CI_USERNAME}@${CI_IP}:${DEST_PATH}
    - sshpass -p $CI_PASSWORD scp -r backend.jar ${CI_USERNAME}@${CI_IP}:${DEST_PATH}/skills-deploy
    - sshpass -p $CI_PASSWORD scp -r user-info-service ${CI_USERNAME}@${CI_IP}:${DEST_PATH}/skills-deploy
    - sshpass -p $CI_PASSWORD ssh -o StrictHostKeyChecking=no -o PreferredAuthentications=password -o PubkeyAuthentication=no $CI_USERNAME@$CI_IP "cd ${DEST_PATH}/skills-deploy && ./runDeploy.sh"
  only:
    - master
