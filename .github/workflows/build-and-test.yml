# Copyright 2020 SkillTree
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Continuous Integration

on:
  push:
    paths-ignore:
      - 'README.md'
      - '.github/workflows/build-and-test-postgres.yml'
      - '.github/workflows/build-and-test-redis.yml'
      - '.gitlab-ci.yml'
  pull_request:
    paths-ignore:
      - 'README.md'
      - '.github/workflows/build-and-test-postgres.yml'
      - '.github/workflows/build-and-test-redis.yml'
      - '.gitlab-ci.yml'

jobs:
  service-against-h2:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v3
        with:
          maven-version: 3.6.3

      - uses: actions/setup-java@v1
        with:
          java-version: '11.X.X' # The JDK version to make available on the path.

      - name: Print Versions
        run: |
          mvn --version
          java -version

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build skills-service
        run: mvn --batch-mode install -DskipTests

      - name: upload result artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: CI result artifacts
          path: |
            ./service/target/*.log

      - name: upload service jar
        uses: actions/upload-artifact@v2
        with:
          name: service jar
          path: ./service/target/*.jar

  ui-tests-against-h2:
    runs-on: ubuntu-latest
    needs: [service-against-h2]
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3]

    steps:
    - name: Install Emoji Support
      run: sudo apt-get install fonts-noto-color-emoji

    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2-beta
      with:
        node-version: '12'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v3
      with:
        maven-version: 3.6.3

    - uses: actions/setup-java@v1
      with:
        java-version: '11.X.X' # The JDK version to make available on the path.

    - name: Print Versions
      run: |
        mvn --version
        java -version

    - uses: actions/download-artifact@v2
      with:
        name: service jar
        path: ./service/target/

    - name: Prep Services for Cypress tests
      run: |
        cd e2e-tests
        npm install
        npm run cyServices:start
        cd ..

    - name: Run Cypress tests
      uses: cypress-io/github-action@v2
      with:
        working-directory: e2e-tests
        record: true
        parallel: true
        group: 'skills-service tests'
      env:
        # pass the Dashboard record key as an environment variable
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        # pass GitHub token to allow accurately detecting a build vs a re-run build
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: upload result artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: CI result artifacts
        path: |
          ./service/target/*.log
          ./e2e-tests/cypress
          ./e2e-tests/logs

    - name: upload service jar
      uses: actions/upload-artifact@v2
      with:
        name: service jar
        path: ./service/target/*.jar

#  service-against-postgresql:
#    runs-on: ubuntu-latest
#
#    services:
#      postgres:
#        image: postgres
#        # Provide the password for postgres
#        env:
#          POSTGRES_PASSWORD: skillsPassword
#          POSTGRES_DB: skills
#        # Set health checks to wait until postgres has started
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          # Maps tcp port 5432 on service container to the host
#          - 5432:5432
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - uses: actions/setup-node@v2-beta
#        with:
#          node-version: '12'
#
#      - name: Set up Maven
#        uses: stCarolas/setup-maven@v3
#        with:
#          maven-version: 3.6.3
#
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '11.X.X' # The JDK version to make available on the path.
#
#      - name: Print Versions
#        run: |
#          mvn --version
#          java -version
#
#      - name: Cache local Maven repository
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#
#      - name: Build skills-service
#        run: mvn --batch-mode test -Dspring.datasource.url=jdbc:postgresql://localhost:5432/skills -Dspring.datasource.username=postgres -Dspring.datasource.password=skillsPassword
#
#      - name: upload result artifacts
#        if: ${{ always() }}
#        uses: actions/upload-artifact@v2
#        with:
#          name: CI result artifacts
#          path: |
#            ./service/target/*.log
#            ./e2e-tests/cypress
#            ./e2e-tests/logs
#
#  publish-snapshot-docker-image:
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#    needs: [service-and-ui-against-h2, service-against-postgresql]
#    steps:
#      - uses: actions/checkout@v2
#
#      - uses: actions/download-artifact@v2
#        with:
#          name: service jar
#          path: ./service/target/
#
#      - name: Build image
#        env:
#          docker_username: ${{ secrets.DOCKERUSERNAME }}
#          docker_password: ${{ secrets.DOCKERPASSWORD }}
#        run: |
#          cd docker
#          bash build-and-push.sh "skilltree/skills-service-ci"


