# This is a basic workflow to help you get started with Actions

name: Continuous Integration

on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'
#  schedule:
#   - cron: '*/5 * * * *'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
#    services:
#      # Label used to access the service container
#      postgres:
#        # Docker Hub image
#        image: postgres
#        # Provide the password for postgres
#        env:
#          POSTGRES_PASSWORD: postgres
#        # Set health checks to wait until postgres has started
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: only if push
      if: github.event_name == 'push'
      run: echo 'this is push'

    - name: only if schedule
      if: github.event_name == 'schedule'
      run: echo 'this is schedule'

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      -
    - name: Hello world action step
      id: hello
      uses: ./.github/actions/upload-res-artifacts
      with:
        who-to-greet: 'Mona the Octocat'




#    - uses: actions/setup-node@v2-beta
#      with:
#        node-version: '12'
#
#    - name: Set up Maven
#      uses: stCarolas/setup-maven@v3
#      with:
#        maven-version: 3.6.3
#
#    - uses: actions/setup-java@v1
#      with:
#        java-version: '11.X.X' # The JDK version to make available on the path.
#
#    - name: Print Versions
#      run: |
#        mvn --version
#        java -version
#
#    - name: Cache local Maven repository
#      uses: actions/cache@v2
#      with:
#        path: ~/.m2/repository
#        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#        restore-keys: |
#          ${{ runner.os }}-maven-
#
#    - name: Build skills-service
#      run: mvn --batch-mode install
#
#    - name: Run Cypress tests
#      run: |
#        cd e2e-tests
#        npm install
#        npm run cyServices:start
#        npm run cy:run
#        cd ..
#
#    - name: upload skills service jar
#      if: ${{ always() }}
#      uses: actions/upload-artifact@v2
#      with:
#        name: skills-service jar
#        path: ./service/target/*.jar
#
#    - name: upload skills service logs
#      if: ${{ always() }}
#      uses: actions/upload-artifact@v2
#      with:
#        name: skills-service logs
#        path: ./service/target/*.log
#
#    - name: upload cypress
#      if: ${{ always() }}
#      uses: actions/upload-artifact@v2
#      with:
#        name: cypress videos
#        path: ./e2e-tests/cypress
#
#    - name: upload services logs during cypress rung
#      if: ${{ always() }}
#      uses: actions/upload-artifact@v2
#      with:
#        name: services logs during cypress runs
#        path: ./e2e-tests/logs
